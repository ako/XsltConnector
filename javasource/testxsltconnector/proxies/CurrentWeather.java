// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package testxsltconnector.proxies;

public class CurrentWeather
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject currentWeatherMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "TestXsltConnector.CurrentWeather";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Location("Location"),
		Time("Time"),
		Wind("Wind"),
		Visibility("Visibility"),
		Temperature("Temperature"),
		DewPoint("DewPoint"),
		RelativeHumidity("RelativeHumidity"),
		Pressure("Pressure"),
		Status("Status");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public CurrentWeather(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "TestXsltConnector.CurrentWeather"));
	}

	protected CurrentWeather(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject currentWeatherMendixObject)
	{
		if (currentWeatherMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("TestXsltConnector.CurrentWeather", currentWeatherMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a TestXsltConnector.CurrentWeather");

		this.currentWeatherMendixObject = currentWeatherMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'CurrentWeather.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static testxsltconnector.proxies.CurrentWeather initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return testxsltconnector.proxies.CurrentWeather.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.getSudoContext() can be used to obtain sudo access).
	 */
	public static testxsltconnector.proxies.CurrentWeather initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new testxsltconnector.proxies.CurrentWeather(context, mendixObject);
	}

	public static testxsltconnector.proxies.CurrentWeather load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return testxsltconnector.proxies.CurrentWeather.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Location
	 */
	public final String getLocation()
	{
		return getLocation(getContext());
	}

	/**
	 * @param context
	 * @return value of Location
	 */
	public final String getLocation(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.Location.toString());
	}

	/**
	 * Set value of Location
	 * @param location
	 */
	public final void setLocation(String location)
	{
		setLocation(getContext(), location);
	}

	/**
	 * Set value of Location
	 * @param context
	 * @param location
	 */
	public final void setLocation(com.mendix.systemwideinterfaces.core.IContext context, String location)
	{
		getMendixObject().setValue(context, MemberNames.Location.toString(), location);
	}

	/**
	 * @return value of Time
	 */
	public final String getTime()
	{
		return getTime(getContext());
	}

	/**
	 * @param context
	 * @return value of Time
	 */
	public final String getTime(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.Time.toString());
	}

	/**
	 * Set value of Time
	 * @param time
	 */
	public final void setTime(String time)
	{
		setTime(getContext(), time);
	}

	/**
	 * Set value of Time
	 * @param context
	 * @param time
	 */
	public final void setTime(com.mendix.systemwideinterfaces.core.IContext context, String time)
	{
		getMendixObject().setValue(context, MemberNames.Time.toString(), time);
	}

	/**
	 * @return value of Wind
	 */
	public final String getWind()
	{
		return getWind(getContext());
	}

	/**
	 * @param context
	 * @return value of Wind
	 */
	public final String getWind(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.Wind.toString());
	}

	/**
	 * Set value of Wind
	 * @param wind
	 */
	public final void setWind(String wind)
	{
		setWind(getContext(), wind);
	}

	/**
	 * Set value of Wind
	 * @param context
	 * @param wind
	 */
	public final void setWind(com.mendix.systemwideinterfaces.core.IContext context, String wind)
	{
		getMendixObject().setValue(context, MemberNames.Wind.toString(), wind);
	}

	/**
	 * @return value of Visibility
	 */
	public final String getVisibility()
	{
		return getVisibility(getContext());
	}

	/**
	 * @param context
	 * @return value of Visibility
	 */
	public final String getVisibility(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.Visibility.toString());
	}

	/**
	 * Set value of Visibility
	 * @param visibility
	 */
	public final void setVisibility(String visibility)
	{
		setVisibility(getContext(), visibility);
	}

	/**
	 * Set value of Visibility
	 * @param context
	 * @param visibility
	 */
	public final void setVisibility(com.mendix.systemwideinterfaces.core.IContext context, String visibility)
	{
		getMendixObject().setValue(context, MemberNames.Visibility.toString(), visibility);
	}

	/**
	 * @return value of Temperature
	 */
	public final String getTemperature()
	{
		return getTemperature(getContext());
	}

	/**
	 * @param context
	 * @return value of Temperature
	 */
	public final String getTemperature(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.Temperature.toString());
	}

	/**
	 * Set value of Temperature
	 * @param temperature
	 */
	public final void setTemperature(String temperature)
	{
		setTemperature(getContext(), temperature);
	}

	/**
	 * Set value of Temperature
	 * @param context
	 * @param temperature
	 */
	public final void setTemperature(com.mendix.systemwideinterfaces.core.IContext context, String temperature)
	{
		getMendixObject().setValue(context, MemberNames.Temperature.toString(), temperature);
	}

	/**
	 * @return value of DewPoint
	 */
	public final String getDewPoint()
	{
		return getDewPoint(getContext());
	}

	/**
	 * @param context
	 * @return value of DewPoint
	 */
	public final String getDewPoint(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.DewPoint.toString());
	}

	/**
	 * Set value of DewPoint
	 * @param dewpoint
	 */
	public final void setDewPoint(String dewpoint)
	{
		setDewPoint(getContext(), dewpoint);
	}

	/**
	 * Set value of DewPoint
	 * @param context
	 * @param dewpoint
	 */
	public final void setDewPoint(com.mendix.systemwideinterfaces.core.IContext context, String dewpoint)
	{
		getMendixObject().setValue(context, MemberNames.DewPoint.toString(), dewpoint);
	}

	/**
	 * @return value of RelativeHumidity
	 */
	public final String getRelativeHumidity()
	{
		return getRelativeHumidity(getContext());
	}

	/**
	 * @param context
	 * @return value of RelativeHumidity
	 */
	public final String getRelativeHumidity(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.RelativeHumidity.toString());
	}

	/**
	 * Set value of RelativeHumidity
	 * @param relativehumidity
	 */
	public final void setRelativeHumidity(String relativehumidity)
	{
		setRelativeHumidity(getContext(), relativehumidity);
	}

	/**
	 * Set value of RelativeHumidity
	 * @param context
	 * @param relativehumidity
	 */
	public final void setRelativeHumidity(com.mendix.systemwideinterfaces.core.IContext context, String relativehumidity)
	{
		getMendixObject().setValue(context, MemberNames.RelativeHumidity.toString(), relativehumidity);
	}

	/**
	 * @return value of Pressure
	 */
	public final String getPressure()
	{
		return getPressure(getContext());
	}

	/**
	 * @param context
	 * @return value of Pressure
	 */
	public final String getPressure(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.Pressure.toString());
	}

	/**
	 * Set value of Pressure
	 * @param pressure
	 */
	public final void setPressure(String pressure)
	{
		setPressure(getContext(), pressure);
	}

	/**
	 * Set value of Pressure
	 * @param context
	 * @param pressure
	 */
	public final void setPressure(com.mendix.systemwideinterfaces.core.IContext context, String pressure)
	{
		getMendixObject().setValue(context, MemberNames.Pressure.toString(), pressure);
	}

	/**
	 * @return value of Status
	 */
	public final String getStatus()
	{
		return getStatus(getContext());
	}

	/**
	 * @param context
	 * @return value of Status
	 */
	public final String getStatus(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.Status.toString());
	}

	/**
	 * Set value of Status
	 * @param status
	 */
	public final void setStatus(String status)
	{
		setStatus(getContext(), status);
	}

	/**
	 * Set value of Status
	 * @param context
	 * @param status
	 */
	public final void setStatus(com.mendix.systemwideinterfaces.core.IContext context, String status)
	{
		getMendixObject().setValue(context, MemberNames.Status.toString(), status);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return currentWeatherMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final testxsltconnector.proxies.CurrentWeather that = (testxsltconnector.proxies.CurrentWeather) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "TestXsltConnector.CurrentWeather";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
